#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    // zmk,matrix_transform = &default_transform;
    zmk,matrix_transform = &five_column_transform;
  };
};

&lt {
        flavor = "balanced";
};

&sk {
        quick-release;
};

/ {
        behaviors {
                rm: row_mod {
                        compatible = "zmk,behavior-hold-tap";
                        label = "ROW_MOD";
                        flavor = "balanced";
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        global-quick-tap;
                        #binding-cells = <2>;
                        bindings = <&kp>, <&kp>;
                };
                ls: layer_sticky {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LAYER_STICKY";
                        flavor = "balanced";
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        #binding-cells = <2>;
                        bindings = <&mo>, <&sk>;
                };
                lrpt: layer_repeat {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LAYER_REPEAT";
                        flavor = "balanced";
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        #binding-cells = <2>;
                        bindings = <&mo>, <&key_repeat>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "COLEMAK";
                        bindings = <
   &kp Q       &kp W      &kp C       &kp P      &kp B     &kp J    &kp L      &kp U           &kp Y        &kp SEMI
   &kp A       &kp R      &kp S       &kp T      &kp G     &kp M    &kp N      &kp E           &kp I        &kp O
   &rm LSHFT Z &rm LALT X &rm LCTRL F &rm LGUI D &kp V     &kp K    &rm RGUI H &rm RCTRL COMMA &rm RALT DOT &rm RSHFT APOS
   &kp ESC     &lrpt 1 0  &ls 2 LSFT  &lt 3 SPACE &lt 1 RET &kp BSPC
                        >;
                };

                num_layer {
                        label = "NUMBER";
                        bindings = <
   &kp EXCL        &kp N6      &kp N3       &kp DLLR    &kp PRCNT &kp ASTRK  &kp N7         &kp N8       &kp N9      &kp FSLH
   &kp LSHFT       &kp N6      &kp N5       &kp N4      &kp PRCNT &kp PLUS   &kp N1         &kp N2 &kp N3 &kp DOT
   &rm LSHFT PRCNT &rm LALT N9 &rm LCTRL N8 &rm LGUI N7 &kp PRCNT &kp RA(N3) &rm RGUI MINUS &trans       &trans      &kp COLON
   &trans    &trans      &trans      &trans      &kp N0    &trans
                        >;
                };

                sym_layer {
                        label = "SYMBOL";
                        bindings = <
   &kp BSLH        &kp DQT        &kp COLON    &kp QMARK   &kp BSLH      &kp CARET &kp LBRC      &kp ASTRK       &kp RBRC      &kp SEMI
   &kp EXCL        &kp AT         &kp HASH     &kp DLLR    &kp PRCNT     &kp MINUS &kp LPAR      &kp PLUS        &kp RPAR      &kp EQUAL
   &rm LSHFT TILDE &rm LALT GRAVE &rm LCTRL LT &rm LGUI GT &kp LG(GRAVE) &kp AMPS  &rm RGUI LBKT &rm RCTRL UNDER &rm RALT RBKT &rm RSHFT PIPE
   &trans    &trans  &trans    &trans    &trans    &trans
                        >;
                };

                nav_layer {
                        label = "NAV";
                        bindings = <
   &trans &trans &trans &trans &trans &kp ENTER   &kp RS(TAB)   &kp TAB      &trans         &trans
   &trans &trans &trans &trans &trans &kp LEFT    &rm RGUI DOWN &rm RCTRL UP &rm RALT RIGHT &trans
   &trans &trans &trans &trans &trans &kp ENTER &kp BSPC      &kp DEL      &kp ESC        &trans
   &trans &trans &trans &trans &trans &trans
                        >;
                };
        };

        combos {
                compatible = "zmk,combos";
                // RIGHT HAND
                // symbols
                combo_q {
                        key-positions = <27 28>;
                        bindings = <&rm RC(RALT) QMARK>;
                };
                combo_underscore {
                        key-positions = <26 27>;
                        bindings = <&rm RG(RCTRL) UNDERSCORE>;
                };
                combo_minus {
                        key-positions = <16 17>;
                        bindings = <&kp MINUS>;
                        timeout-ms = <30>;
                };
                combo_dquot {
                        key-positions = <17 18>;
                        bindings = <&kp DOUBLE_QUOTES>;
                };
                combo_fslash {
                        key-positions = <16 7>;
                        bindings = <&kp FSLH>;
                };
                combo_bslash {
                        key-positions = <7 18>;
                        bindings = <&kp BSLH>;
                };
                combo_eq {
                        key-positions = <26 29>;
                        bindings = <&rm RG(RSHFT) EQUAL>;
                };
                combo_lbkt {
                        key-positions = <26 28>;
                        bindings = <&rm RG(RALT) LBKT>;
                };
                combo_rbkt {
                        key-positions = <27 29>;
                        bindings = <&rm RC(RSHFT) RBKT>;
                };


                // control
                combo_enter {
                        key-positions = <16 17 18>;
                        bindings = <&kp ENTER>;
                };
                combo_capsword {
                        key-positions = <26 27 28>;
                        bindings = <&caps_word>;
                };

                // numbers
                combo_1 {
                        key-positions = <6 7>;
                        bindings = <&kp N1>;
                };
                combo_2 {
                        key-positions = <6 8>;
                        bindings = <&kp N2>;
                };
                combo_3 {
                        key-positions = <6 7 8>;
                        bindings = <&kp N3>;
                };
                combo_0 {
                        key-positions = <7 8>;
                        bindings = <&kp N0>;
                };

                // LEFT HAND
                combo_dollar {
                        key-positions = <12 13>;
                        bindings = <&kp DOLLAR>;
                };
                combo_grave {
                        key-positions = <21 22>;
                        bindings = <&rm LC(LALT) GRAVE>;
                };
                combo_at {
                        key-positions = <16 17>;
                        bindings = <&kp AT>;
                        timeout-ms = <30>;
                };
        };
};
